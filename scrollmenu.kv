<-FreeScrollView>:
    padding: 10

    spacing: self.padding
    height: (saware_layout.height_per_child * (min(len(saware_layout.children), self.items_per_page))) if self.items_per_page else 0
    size_hint: None, None

    do_scroll_x: False

    # We are only keeping the ScrollView KV minus the scrollbars, and getting rid of the StencilView.
    _handle_y_pos: (self.right - self.bar_width - self.bar_margin) if self.bar_pos_y == 'right' else (self.x + self.bar_margin), self.y + self.height * self.vbar[0]
    _handle_y_size: min(self.bar_width, self.width), self.height * self.vbar[1]
    _handle_x_pos: self.x + self.width * self.hbar[0], (self.y + self.bar_margin) if self.bar_pos_x == 'bottom' else (self.top - self.bar_margin - self.bar_width)
    _handle_x_size: self.width * self.hbar[1], min(self.bar_width, self.height)

    ScrollAwareLayout:
        id: saware_layout
        padding: root.padding or 0
        spacing: root.spacing or 0
        width: root.width or 0

<ScrollAwareLayout>:
    orientation: 'vertical'
    size_hint: None, None
    height: self.minimum_height

<OptionIndicator>:
    x_transform: 0
    x_transform_max: 50

    canvas:
        Color:
            rgba: (1,1,1,1)
        PushMatrix:
        Translate:
            x: self.x_transform
            y: 0
            z: 0
        RoundedRectangle:
            pos: self.x + 5, self.y + 5
            size: self.width - self.x_transform_max - 10, self.height - 10
            segments: 2
            radius: [5,]
        #Line:
        #    rounded_rectangle: self.x, self.y, self.width - self.x_transform_max, self.height, 10
        #    width: 2
        PopMatrix:

<ScrollMenu>:
    orientation: 'horizontal'
    spacing: 50
    size: self.minimum_size
    size_hint: None, None
    indicator_center_y: free_scroll_view.indicator_center_y
    indicator: indicator

    on_indicator_center_y:
        print('Indicator center y: {} '.format(self.indicator_center_y))

    canvas.before:
        Color:
            rgba: (0, 0, 0, 0.3)

        RoundedRectangle:
            pos: self.pos
            size: self.size
            radius: [30,]

    OptionIndicator:
        id: indicator
        size: 150,50
        size_hint: None, None
        pos_hint: {'center_x': 0.5, 'center_y': root.indicator_center_y}

    FreeScrollView:
        id: free_scroll_view
        items_per_page: root.items_per_page if root.items_per_page else 0
        pos_hint: {'center_x': .5, 'center_y': .5}
        width: root.menu_width if root.menu_width else 0

<OptionButton>
    font_name: 'PressStart2P-Regular'
    text: ''
    font_size: 40
    height: 70
    scale: 1
    multiple_choice: False

    show_arrows: False
    outline_width: 10 if self.focus else 0
    arrow_left: self.x+30, self.center_y+20, self.x+10, self.center_y, self.x+30, self.center_y-20
    arrow_right: self.right-30, self.center_y+20, self.right-10, self.center_y, self.right-30, self.center_y-20


    on_focus:
        if not self.focus: setattr(self, 'show_arrows', False)

    canvas.before:

        Color:
            rgba: 1, 1, 1, self.arrow_left_opacity

        Line:
            points: self.arrow_left if self.show_arrows else []
            cap: 'round'
            joint: 'round'
            close: False
            width: 10

        Color:
            rgba: 1, 1, 1, self.arrow_right_opacity

        Line:
            points: self.arrow_right if self.show_arrows else []
            cap: 'round'
            joint: 'round'
            close: False
            width: 10

        PushMatrix:

        Scale:
            origin: self.x + 0.5*self.width, self.y + 0.5*self.height
            x: self.scale
            y: self.scale

    canvas.after:
        PopMatrix: